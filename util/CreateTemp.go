package util

import (
	"os"
	"path/filepath"
	"strings"
)

// CreateTemp is similar to os.CreateTemp in Go 1.16+ but for compatibility with
// Go 1.14 and 1.15.
//
// It creates a new temporary file in the existing directory dir, opens the file
// for reading and writing, and returns the resulting file.
//
// The filename is generated by taking pattern and adding a random string to the
// end.
//
// If pattern includes a "*", the random string replaces the last "*".
// If dir is the empty string, CreateTemp uses the default directory for temporary
// files, as returned by os.TempDir.
//
// Multiple programs or goroutines calling CreateTemp simultaneously will not
// choose the same file. The caller can use the file's Name method to find the
// pathname of the file. It is the caller's responsibility to remove the file when
// it is no longer needed.
func CreateTemp(dir string, pattern string) (*os.File, error) {
	rand := RandStr(16)
	numAstrsk := strings.Count(pattern, "*")
	found := 0
	nameFile := ""

	if dir == "" {
		dir = os.TempDir()
	}

	if numAstrsk == 0 {
		nameFile = pattern + rand

		return os.Create(filepath.Join(dir, nameFile))
	}

	// Search and replace the last asterisk to rand string
	for _, r := range pattern {
		s := string(r)

		if s == "*" {
			found++

			if found == numAstrsk {
				s = rand
			}
		}

		nameFile += s
	}

	pathFile := filepath.Join(dir, nameFile)

	return os.Create(pathFile)
}
